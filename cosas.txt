
views


context={
         'lista':'asdsdsda',
         }
return render(request, 'pages/pagos.html', context)

html 


{% autoescape off %}
  {{ lista }}
{% endautoescape %}  


from django.shortcuts import render
from django.contrib.auth import alogin, alogout
from django.shortcuts import redirect
from  django.http import HttpRequest as request
from  django.http import HttpResponse
from django.contrib.auth.decorators import login_required

# @login_required(redirect_field_name="/home")
async def logout(request):
        await alogout(request)
        user = request.user
        # await alogout(request)
        return redirect("/login")
        # return HttpResponse("<h1>Page was found</h1>")
        # return render(request, 'pages/home.html')

path('logout', trackin.logout, name='logout'),

from django.http import JsonResponse

### Función  agrega corrdenadas

def agrega_corrdenadas(request):                                                 
        if request.method == 'GET':
                try:    
                        longitud = request.GET.get('longitud',"")
                        latitud = request.GET.get('latitud',"")
                                                         
                        if longitud!='' and latitud!='':
                                context= {
                                        'mensaje':'Las coordenadas se registraron de manera satisfactoria',

                                }
                                return JsonResponse(context)
                        else:
                                context= {
                                        'mensaje':'Las coordenadas NO se registraron de manera satisfactoria',

                                }
                                return JsonResponse(context)
                except:
                        context= {
                                'mensaje':"Error en la función agrega_corrdenadas ",
                        }
                        return JsonResponse(context)

request.user.username


from django.contrib.auth.decorators import login_required
@login_required(redirect_field_name="")

auser=await aauthenticate(username=username,password=password)   
if auser is not None:   
await alogin(request,auser)  

from django.contrib.auth import alogin, alogout

if (username is not None) and (password is not None ):
   auser=await aauthenticate(username=username,password=password)   
   if auser is not None:   
       await alogin(request,auser)   
       return redirect("/home")
   else:
       context= {
       'message': "Nombre de usuario o contraseña incorrecta",
       }
       return render(request, 'pages/login.html', context)

301 79 11256  Lennin Escobar




<--- MODELS--->

from django.db import models
from django.contrib.auth.models import User
import datetime

class UserProfile(models.Model):
    rol_choices = [('1','Admin'),('2','Operativo'),('3','Técnico')]
    lugar_lista = [('Bogotá','Bogotá'),('Barranquilla','Barranquilla'),('Medellín','Medellín'),('Colombia','Colombia')]
    user = models.OneToOneField(User, on_delete=models.CASCADE)
    rol = models.CharField(max_length=100, choices=rol_choices, default=None)
    lugar = models.CharField(max_length=100, choices=lugar_lista, default=None)
    identidad = models.CharField(max_length=100, blank=True)
    cambio_ciudad=models.BooleanField(default=False)
    realiza_servicio=models.BooleanField(default=False)
    fecha_creacion=models.DateField(default=datetime.datetime.now, editable=True)
    image_profile=models.ImageField(upload_to="static/img/",default="static/img/user_default.png")

<--- MODELS--->

<--- Views --->

from usuarios import models
from django.contrib.auth.models import User
from django.contrib.auth import get_user_model

 u=models.UserProfile.objects.get(user__username=str(request.user.username))

 u.lugar


DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

